# Generated by Selenium IDE
import unittest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestBlog01(unittest.TestCase):
    def setup(self):
        self.driver = webdriver.Firefox()
        self.vars = {}

    def teardown(self):
        self.driver.quit()

    # def wait_for_window(self, timeout = 2):
    #   time.sleep(round(timeout / 1000))
    #   wh_now = self.driver.window_handles
    #   wh_then = self.vars["window_handles"]
    #   if len(wh_now) > len(wh_then):
    #     return set(wh_now).difference(set(wh_then)).pop()

    def test_blog01(self):
        self.driver.get("http://localhost:8080/servletblog/")
        self.driver.set_window_size(1283, 620)
        self.driver.find_element(By.ID, "article_add_btn").click()

        self.driver.find_element(By.CSS_SELECTOR, "#article_div41 .article_check").click()
        self.vars["window_handles"] = self.driver.window_handles
        self.driver.find_element(By.ID, "article_update_btn").click()
        self.vars["win4252"] = self.wait_for_window(2000)
        self.vars["root"] = self.driver.current_window_handle
        self.driver.switch_to.window(self.vars["win4252"])
        self.driver.switch_to.window(self.vars["root"])
        self.driver.switch_to.window(self.vars["win4252"])
        self.driver.switch_to.frame(1)
        self.driver.find_element(By.CSS_SELECTOR, "p").click()
        self.driver.switch_to.default_content()
        self.driver.execute_script("window.scrollTo(0,119)")
        self.driver.switch_to.frame(1)
        element = self.driver.find_element(By.CSS_SELECTOR, ".view:nth-child(2)")
        self.driver.execute_script(
            "if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>自动化测试123<br></p>'}", element)
        self.driver.switch_to.default_content()
        self.driver.find_element(By.ID, "btn_submit").click()
        self.driver.switch_to.window(self.vars["root"])
        self.driver.find_element(By.LINK_TEXT, "自动化测试").click()
        self.vars["window_handles"] = self.driver.window_handles
        self.driver.find_element(By.ID, "article_update_btn").click()
        self.vars["win2297"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win2297"])
        self.driver.execute_script("window.scrollTo(0,118)")
        self.driver.execute_script("window.scrollTo(0,0)")
        self.driver.close()
        self.driver.switch_to.window(self.vars["win4252"])
        self.driver.switch_to.window(self.vars["root"])
        self.driver.find_element(By.CSS_SELECTOR, "#article_div40 .article_check").click()
        self.driver.find_element(By.CSS_SELECTOR, "#article_div39 .article_check").click()
        self.driver.find_element(By.ID, "article_delete_btn").click()
        self.driver.find_element(By.CSS_SELECTOR, ".glyphicon-floppy-disk").click()

    if __name__ == "__main_":
        unittest.TestCase()

